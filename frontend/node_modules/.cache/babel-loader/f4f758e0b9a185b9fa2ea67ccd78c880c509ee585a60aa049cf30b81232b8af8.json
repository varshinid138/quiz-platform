{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\VARSHINI\\\\quiz-platform\\\\frontend\\\\src\\\\pages\\\\QuizTakerPage.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { useNavigate } from 'react-router-dom';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction QuizTakePage() {\n  _s();\n  const [quizzes, setQuizzes] = useState([]);\n  const [currentQuestionIndex, setCurrentQuestionIndex] = useState(0);\n  const [score, setScore] = useState(0);\n  const [isLoading, setIsLoading] = useState(true);\n  const navigate = useNavigate();\n  useEffect(() => {\n    const fetchQuizzes = async () => {\n      try {\n        const response = await fetch('http://localhost:3001/get-quizzes');\n        const data = await response.json();\n        setQuizzes(data);\n      } catch (error) {\n        console.error('Error fetching quizzes:', error);\n      } finally {\n        setIsLoading(false);\n      }\n    };\n    fetchQuizzes();\n  }, []);\n  const handleAnswer = selectedOption => {\n    var _quizzes$;\n    const currentQuestion = quizzes[0].questions[currentQuestionIndex];\n    if (selectedOption === currentQuestion.correctAnswer) {\n      setScore(prevScore => prevScore + 1);\n    }\n    if (currentQuestionIndex < ((_quizzes$ = quizzes[0]) === null || _quizzes$ === void 0 ? void 0 : _quizzes$.questions.length) - 1) {\n      setCurrentQuestionIndex(prevIndex => prevIndex + 1);\n    } else {\n      var _quizzes$2;\n      navigate('/score', {\n        state: {\n          score: score + (selectedOption === currentQuestion.correctAnswer ? 1 : 0),\n          total: (_quizzes$2 = quizzes[0]) === null || _quizzes$2 === void 0 ? void 0 : _quizzes$2.questions.length\n        }\n      });\n    }\n  };\n  if (isLoading) {\n    return /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"Loading quiz...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 16\n    }, this);\n  }\n  if (quizzes.length === 0) {\n    return /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"No quizzes available.\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 16\n    }, this);\n  }\n  const currentQuestion = quizzes[0].questions[currentQuestionIndex];\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    style: {\n      padding: '20px',\n      textAlign: 'center'\n    },\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: quizzes[0].topic\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        marginTop: '20px'\n      },\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        children: [\"Question \", currentQuestionIndex + 1]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: currentQuestion.question\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n        style: {\n          listStyleType: 'none',\n          padding: 0\n        },\n        children: currentQuestion.options.map((option, index) => /*#__PURE__*/_jsxDEV(\"li\", {\n          style: {\n            margin: '10px 0'\n          },\n          children: /*#__PURE__*/_jsxDEV(\"button\", {\n            style: {\n              padding: '10px 20px',\n              fontSize: '16px',\n              cursor: 'pointer',\n              backgroundColor: '#007bff',\n              color: 'white',\n              border: 'none',\n              borderRadius: '5px'\n            },\n            onClick: () => handleAnswer(option),\n            children: option\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 64,\n            columnNumber: 29\n          }, this)\n        }, index, false, {\n          fileName: _jsxFileName,\n          lineNumber: 63,\n          columnNumber: 25\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 56,\n    columnNumber: 9\n  }, this);\n}\n_s(QuizTakePage, \"EjSPrk0j5UVIsHQMxeFpuwAnd4s=\", false, function () {\n  return [useNavigate];\n});\n_c = QuizTakePage;\nexport default QuizTakePage;\nvar _c;\n$RefreshReg$(_c, \"QuizTakePage\");","map":{"version":3,"names":["React","useState","useEffect","useNavigate","jsxDEV","_jsxDEV","QuizTakePage","_s","quizzes","setQuizzes","currentQuestionIndex","setCurrentQuestionIndex","score","setScore","isLoading","setIsLoading","navigate","fetchQuizzes","response","fetch","data","json","error","console","handleAnswer","selectedOption","_quizzes$","currentQuestion","questions","correctAnswer","prevScore","length","prevIndex","_quizzes$2","state","total","children","fileName","_jsxFileName","lineNumber","columnNumber","style","padding","textAlign","topic","marginTop","question","listStyleType","options","map","option","index","margin","fontSize","cursor","backgroundColor","color","border","borderRadius","onClick","_c","$RefreshReg$"],"sources":["C:/Users/VARSHINI/quiz-platform/frontend/src/pages/QuizTakerPage.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport { useNavigate } from 'react-router-dom';\r\n\r\nfunction QuizTakePage() {\r\n    const [quizzes, setQuizzes] = useState([]);\r\n    const [currentQuestionIndex, setCurrentQuestionIndex] = useState(0);\r\n    const [score, setScore] = useState(0);\r\n    const [isLoading, setIsLoading] = useState(true);\r\n    const navigate = useNavigate();\r\n\r\n    useEffect(() => {\r\n        const fetchQuizzes = async () => {\r\n            try {\r\n                const response = await fetch('http://localhost:3001/get-quizzes');\r\n                const data = await response.json();\r\n                setQuizzes(data);\r\n            } catch (error) {\r\n                console.error('Error fetching quizzes:', error);\r\n            } finally {\r\n                setIsLoading(false);\r\n            }\r\n        };\r\n        fetchQuizzes();\r\n    }, []);\r\n\r\n    const handleAnswer = (selectedOption) => {\r\n        const currentQuestion = quizzes[0].questions[currentQuestionIndex];\r\n\r\n        if (selectedOption === currentQuestion.correctAnswer) {\r\n            setScore((prevScore) => prevScore + 1);\r\n        }\r\n\r\n        if (currentQuestionIndex < quizzes[0]?.questions.length - 1) {\r\n            setCurrentQuestionIndex((prevIndex) => prevIndex + 1);\r\n        } else {\r\n            navigate('/score', {\r\n                state: { \r\n                    score: score + (selectedOption === currentQuestion.correctAnswer ? 1 : 0),\r\n                    total: quizzes[0]?.questions.length\r\n                }\r\n            });\r\n        }\r\n    };\r\n\r\n    if (isLoading) {\r\n        return <p>Loading quiz...</p>;\r\n    }\r\n\r\n    if (quizzes.length === 0) {\r\n        return <p>No quizzes available.</p>;\r\n    }\r\n\r\n    const currentQuestion = quizzes[0].questions[currentQuestionIndex];\r\n\r\n    return (\r\n        <div style={{ padding: '20px', textAlign: 'center' }}>\r\n            <h2>{quizzes[0].topic}</h2>\r\n            <div style={{ marginTop: '20px' }}>\r\n                <h3>Question {currentQuestionIndex + 1}</h3>\r\n                <p>{currentQuestion.question}</p>\r\n                <ul style={{ listStyleType: 'none', padding: 0 }}>\r\n                    {currentQuestion.options.map((option, index) => (\r\n                        <li key={index} style={{ margin: '10px 0' }}>\r\n                            <button\r\n                                style={{\r\n                                    padding: '10px 20px',\r\n                                    fontSize: '16px',\r\n                                    cursor: 'pointer',\r\n                                    backgroundColor: '#007bff',\r\n                                    color: 'white',\r\n                                    border: 'none',\r\n                                    borderRadius: '5px',\r\n                                }}\r\n                                onClick={() => handleAnswer(option)}\r\n                            >\r\n                                {option}\r\n                            </button>\r\n                        </li>\r\n                    ))}\r\n                </ul>\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default QuizTakePage;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}