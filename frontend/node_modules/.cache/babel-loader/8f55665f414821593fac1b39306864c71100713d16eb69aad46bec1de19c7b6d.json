{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\VARSHINI\\\\quiz-platform\\\\frontend\\\\src\\\\pages\\\\QuizTakerPage.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { useNavigate } from 'react-router-dom';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction QuizTakePage() {\n  _s();\n  const [quizzes, setQuizzes] = useState([]);\n  const [currentQuestionIndex, setCurrentQuestionIndex] = useState(0);\n  const [score, setScore] = useState(0);\n  const [answeredQuestions, setAnsweredQuestions] = useState(0);\n  const [isLoading, setIsLoading] = useState(true);\n  const [timeRemaining, setTimeRemaining] = useState(120); // 2 minutes = 120 seconds\n  const navigate = useNavigate();\n  useEffect(() => {\n    // Fetch quiz data from the server\n    const fetchQuizzes = async () => {\n      try {\n        const response = await fetch('http://localhost:3001/get-quizzes');\n        const data = await response.json();\n        setQuizzes(data);\n      } catch (error) {\n        console.error('Error fetching quizzes:', error);\n      } finally {\n        setIsLoading(false);\n      }\n    };\n    fetchQuizzes();\n\n    // Start the timer\n    const timerInterval = setInterval(() => {\n      setTimeRemaining(prevTime => {\n        if (prevTime <= 1) {\n          clearInterval(timerInterval);\n          handleTimeout();\n          return 0;\n        }\n        return prevTime - 1;\n      });\n    }, 1000);\n    return () => clearInterval(timerInterval);\n  }, []);\n  const handleTimeout = () => {\n    var _quizzes$;\n    navigate('/score', {\n      state: {\n        score,\n        total: (_quizzes$ = quizzes[0]) === null || _quizzes$ === void 0 ? void 0 : _quizzes$.questions.length,\n        answered: answeredQuestions\n      }\n    });\n  };\n  const handleAnswer = selectedOption => {\n    var _quizzes$2;\n    const currentQuestion = quizzes[0].questions[currentQuestionIndex];\n    if (selectedOption === currentQuestion.correctAnswer) {\n      setScore(prevScore => prevScore + 1);\n    }\n    setAnsweredQuestions(prevAnswered => prevAnswered + 1);\n    if (currentQuestionIndex < ((_quizzes$2 = quizzes[0]) === null || _quizzes$2 === void 0 ? void 0 : _quizzes$2.questions.length) - 1) {\n      setCurrentQuestionIndex(prevIndex => prevIndex + 1);\n    } else {\n      var _quizzes$3;\n      navigate('/score', {\n        state: {\n          score: score + (selectedOption === currentQuestion.correctAnswer ? 1 : 0),\n          total: (_quizzes$3 = quizzes[0]) === null || _quizzes$3 === void 0 ? void 0 : _quizzes$3.questions.length,\n          answered: answeredQuestions + 1\n        }\n      });\n    }\n  };\n  const showScore = () => {\n    var _quizzes$4;\n    navigate('/score', {\n      state: {\n        score,\n        total: (_quizzes$4 = quizzes[0]) === null || _quizzes$4 === void 0 ? void 0 : _quizzes$4.questions.length,\n        answered: answeredQuestions\n      }\n    });\n  };\n  if (isLoading) {\n    return /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"Loading quiz...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 86,\n      columnNumber: 16\n    }, this);\n  }\n  if (quizzes.length === 0) {\n    return /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"No quizzes available.\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 90,\n      columnNumber: 16\n    }, this);\n  }\n  const currentQuestion = quizzes[0].questions[currentQuestionIndex];\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    style: {\n      padding: '20px',\n      textAlign: 'center'\n    },\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: quizzes[0].topic\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 97,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        marginTop: '20px'\n      },\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        children: [\"Question \", currentQuestionIndex + 1]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 99,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: currentQuestion.question\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 100,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n        style: {\n          listStyleType: 'none',\n          padding: 0\n        },\n        children: currentQuestion.options.map((option, index) => /*#__PURE__*/_jsxDEV(\"li\", {\n          style: {\n            margin: '10px 0'\n          },\n          children: /*#__PURE__*/_jsxDEV(\"button\", {\n            style: {\n              padding: '10px 20px',\n              fontSize: '16px',\n              cursor: 'pointer',\n              backgroundColor: '#007bff',\n              color: 'white',\n              border: 'none',\n              borderRadius: '5px'\n            },\n            onClick: () => handleAnswer(option),\n            children: option\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 104,\n            columnNumber: 29\n          }, this)\n        }, index, false, {\n          fileName: _jsxFileName,\n          lineNumber: 103,\n          columnNumber: 25\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 101,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 98,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: [\"Time Remaining: \", Math.floor(timeRemaining / 60), \":\", (timeRemaining % 60).toString().padStart(2, '0')]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 122,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: showScore,\n      style: {\n        padding: '10px 20px',\n        fontSize: '16px',\n        cursor: 'pointer',\n        backgroundColor: '#28a745',\n        color: 'white',\n        border: 'none',\n        borderRadius: '5px',\n        marginTop: '20px'\n      },\n      children: \"Show Score\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 123,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 96,\n    columnNumber: 9\n  }, this);\n}\n_s(QuizTakePage, \"ql0JlUQ2/C2C0LNUZA34zHjjCcg=\", false, function () {\n  return [useNavigate];\n});\n_c = QuizTakePage;\nexport default QuizTakePage;\nvar _c;\n$RefreshReg$(_c, \"QuizTakePage\");","map":{"version":3,"names":["React","useState","useEffect","useNavigate","jsxDEV","_jsxDEV","QuizTakePage","_s","quizzes","setQuizzes","currentQuestionIndex","setCurrentQuestionIndex","score","setScore","answeredQuestions","setAnsweredQuestions","isLoading","setIsLoading","timeRemaining","setTimeRemaining","navigate","fetchQuizzes","response","fetch","data","json","error","console","timerInterval","setInterval","prevTime","clearInterval","handleTimeout","_quizzes$","state","total","questions","length","answered","handleAnswer","selectedOption","_quizzes$2","currentQuestion","correctAnswer","prevScore","prevAnswered","prevIndex","_quizzes$3","showScore","_quizzes$4","children","fileName","_jsxFileName","lineNumber","columnNumber","style","padding","textAlign","topic","marginTop","question","listStyleType","options","map","option","index","margin","fontSize","cursor","backgroundColor","color","border","borderRadius","onClick","Math","floor","toString","padStart","_c","$RefreshReg$"],"sources":["C:/Users/VARSHINI/quiz-platform/frontend/src/pages/QuizTakerPage.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport { useNavigate } from 'react-router-dom';\r\n\r\nfunction QuizTakePage() {\r\n    const [quizzes, setQuizzes] = useState([]);\r\n    const [currentQuestionIndex, setCurrentQuestionIndex] = useState(0);\r\n    const [score, setScore] = useState(0);\r\n    const [answeredQuestions, setAnsweredQuestions] = useState(0);\r\n    const [isLoading, setIsLoading] = useState(true);\r\n    const [timeRemaining, setTimeRemaining] = useState(120); // 2 minutes = 120 seconds\r\n    const navigate = useNavigate();\r\n\r\n    useEffect(() => {\r\n        // Fetch quiz data from the server\r\n        const fetchQuizzes = async () => {\r\n            try {\r\n                const response = await fetch('http://localhost:3001/get-quizzes');\r\n                const data = await response.json();\r\n                setQuizzes(data);\r\n            } catch (error) {\r\n                console.error('Error fetching quizzes:', error);\r\n            } finally {\r\n                setIsLoading(false);\r\n            }\r\n        };\r\n        fetchQuizzes();\r\n\r\n        // Start the timer\r\n        const timerInterval = setInterval(() => {\r\n            setTimeRemaining((prevTime) => {\r\n                if (prevTime <= 1) {\r\n                    clearInterval(timerInterval);\r\n                    handleTimeout();\r\n                    return 0;\r\n                }\r\n                return prevTime - 1;\r\n            });\r\n        }, 1000);\r\n\r\n        return () => clearInterval(timerInterval);\r\n    }, []);\r\n\r\n    const handleTimeout = () => {\r\n        navigate('/score', {\r\n            state: {\r\n                score,\r\n                total: quizzes[0]?.questions.length,\r\n                answered: answeredQuestions\r\n            }\r\n        });\r\n    };\r\n\r\n    const handleAnswer = (selectedOption) => {\r\n        const currentQuestion = quizzes[0].questions[currentQuestionIndex];\r\n\r\n        if (selectedOption === currentQuestion.correctAnswer) {\r\n            setScore((prevScore) => prevScore + 1);\r\n        }\r\n\r\n        setAnsweredQuestions((prevAnswered) => prevAnswered + 1);\r\n\r\n        if (currentQuestionIndex < quizzes[0]?.questions.length - 1) {\r\n            setCurrentQuestionIndex((prevIndex) => prevIndex + 1);\r\n        } else {\r\n            navigate('/score', {\r\n                state: {\r\n                    score: score + (selectedOption === currentQuestion.correctAnswer ? 1 : 0),\r\n                    total: quizzes[0]?.questions.length,\r\n                    answered: answeredQuestions + 1\r\n                }\r\n            });\r\n        }\r\n    };\r\n\r\n    const showScore = () => {\r\n        navigate('/score', {\r\n            state: {\r\n                score,\r\n                total: quizzes[0]?.questions.length,\r\n                answered: answeredQuestions\r\n            }\r\n        });\r\n    };\r\n\r\n    if (isLoading) {\r\n        return <p>Loading quiz...</p>;\r\n    }\r\n\r\n    if (quizzes.length === 0) {\r\n        return <p>No quizzes available.</p>;\r\n    }\r\n\r\n    const currentQuestion = quizzes[0].questions[currentQuestionIndex];\r\n\r\n    return (\r\n        <div style={{ padding: '20px', textAlign: 'center' }}>\r\n            <h2>{quizzes[0].topic}</h2>\r\n            <div style={{ marginTop: '20px' }}>\r\n                <h3>Question {currentQuestionIndex + 1}</h3>\r\n                <p>{currentQuestion.question}</p>\r\n                <ul style={{ listStyleType: 'none', padding: 0 }}>\r\n                    {currentQuestion.options.map((option, index) => (\r\n                        <li key={index} style={{ margin: '10px 0' }}>\r\n                            <button\r\n                                style={{\r\n                                    padding: '10px 20px',\r\n                                    fontSize: '16px',\r\n                                    cursor: 'pointer',\r\n                                    backgroundColor: '#007bff',\r\n                                    color: 'white',\r\n                                    border: 'none',\r\n                                    borderRadius: '5px',\r\n                                }}\r\n                                onClick={() => handleAnswer(option)}\r\n                            >\r\n                                {option}\r\n                            </button>\r\n                        </li>\r\n                    ))}\r\n                </ul>\r\n            </div>\r\n            <p>Time Remaining: {Math.floor(timeRemaining / 60)}:{(timeRemaining % 60).toString().padStart(2, '0')}</p>\r\n            <button\r\n                onClick={showScore}\r\n                style={{\r\n                    padding: '10px 20px',\r\n                    fontSize: '16px',\r\n                    cursor: 'pointer',\r\n                    backgroundColor: '#28a745',\r\n                    color: 'white',\r\n                    border: 'none',\r\n                    borderRadius: '5px',\r\n                    marginTop: '20px',\r\n                }}\r\n            >\r\n                Show Score\r\n            </button>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default QuizTakePage;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}