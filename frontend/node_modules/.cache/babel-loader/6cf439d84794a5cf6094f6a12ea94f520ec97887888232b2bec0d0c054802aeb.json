{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\VARSHINI\\\\quiz-platform\\\\frontend\\\\src\\\\pages\\\\QuizTakerPage.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction QuizTakePage() {\n  _s();\n  const [quizzes, setQuizzes] = useState([]);\n  const [currentQuestionIndex, setCurrentQuestionIndex] = useState(0);\n  const [score, setScore] = useState(0); // State to track the score\n  const [isLoading, setIsLoading] = useState(true);\n  useEffect(() => {\n    // Fetch quiz data from the server\n    const fetchQuizzes = async () => {\n      try {\n        const response = await fetch('http://localhost:3001/get-quizzes');\n        const data = await response.json();\n        setQuizzes(data);\n        setIsLoading(false);\n      } catch (error) {\n        console.error('Error fetching quizzes:', error);\n        setIsLoading(false);\n      }\n    };\n    fetchQuizzes();\n  }, []);\n  const handleOptionClick = option => {\n    const currentQuestion = quizzes[0].questions[currentQuestionIndex];\n\n    // Check if the selected option is correct\n    if (option === currentQuestion.correctAnswer) {\n      setScore(prevScore => prevScore + 1);\n    }\n\n    // Move to the next question or end the quiz\n    if (currentQuestionIndex < quizzes[0].questions.length - 1) {\n      setCurrentQuestionIndex(prevIndex => prevIndex + 1);\n    } else {\n      alert(`Quiz completed! Your score is ${score + 1}/${quizzes[0].questions.length}`);\n    }\n  };\n  if (isLoading) {\n    return /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"Loading quiz...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 16\n    }, this);\n  }\n  if (quizzes.length === 0) {\n    return /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"No quizzes available.\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 16\n    }, this);\n  }\n  const currentQuestion = quizzes[0].questions[currentQuestionIndex];\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    style: {\n      padding: '20px',\n      textAlign: 'center'\n    },\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: quizzes[0].topic\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        marginTop: '20px'\n      },\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        children: [\"Question \", currentQuestionIndex + 1]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: currentQuestion.question\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n        style: {\n          listStyleType: 'none',\n          padding: 0\n        },\n        children: currentQuestion.options.map((option, index) => /*#__PURE__*/_jsxDEV(\"li\", {\n          style: {\n            margin: '10px 0'\n          },\n          children: /*#__PURE__*/_jsxDEV(\"button\", {\n            style: {\n              padding: '10px 20px',\n              fontSize: '16px',\n              cursor: 'pointer',\n              backgroundColor: '#007bff',\n              color: 'white',\n              border: 'none',\n              borderRadius: '5px'\n            },\n            onClick: () => handleOptionClick(option) // Pass the clicked option\n            ,\n            children: option\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 60,\n            columnNumber: 29\n          }, this)\n        }, index, false, {\n          fileName: _jsxFileName,\n          lineNumber: 59,\n          columnNumber: 25\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"Score: \", score, \"/\", quizzes[0].questions.length]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 77,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 52,\n    columnNumber: 9\n  }, this);\n}\n_s(QuizTakePage, \"R1lzg27NIyEozTl+IG7/MfOdCBA=\");\n_c = QuizTakePage;\nexport default QuizTakePage;\nvar _c;\n$RefreshReg$(_c, \"QuizTakePage\");","map":{"version":3,"names":["React","useState","useEffect","jsxDEV","_jsxDEV","QuizTakePage","_s","quizzes","setQuizzes","currentQuestionIndex","setCurrentQuestionIndex","score","setScore","isLoading","setIsLoading","fetchQuizzes","response","fetch","data","json","error","console","handleOptionClick","option","currentQuestion","questions","correctAnswer","prevScore","length","prevIndex","alert","children","fileName","_jsxFileName","lineNumber","columnNumber","style","padding","textAlign","topic","marginTop","question","listStyleType","options","map","index","margin","fontSize","cursor","backgroundColor","color","border","borderRadius","onClick","_c","$RefreshReg$"],"sources":["C:/Users/VARSHINI/quiz-platform/frontend/src/pages/QuizTakerPage.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\n\r\nfunction QuizTakePage() {\r\n    const [quizzes, setQuizzes] = useState([]);\r\n    const [currentQuestionIndex, setCurrentQuestionIndex] = useState(0);\r\n    const [score, setScore] = useState(0); // State to track the score\r\n    const [isLoading, setIsLoading] = useState(true);\r\n\r\n    useEffect(() => {\r\n        // Fetch quiz data from the server\r\n        const fetchQuizzes = async () => {\r\n            try {\r\n                const response = await fetch('http://localhost:3001/get-quizzes');\r\n                const data = await response.json();\r\n                setQuizzes(data);\r\n                setIsLoading(false);\r\n            } catch (error) {\r\n                console.error('Error fetching quizzes:', error);\r\n                setIsLoading(false);\r\n            }\r\n        };\r\n        fetchQuizzes();\r\n    }, []);\r\n\r\n    const handleOptionClick = (option) => {\r\n        const currentQuestion = quizzes[0].questions[currentQuestionIndex];\r\n\r\n        // Check if the selected option is correct\r\n        if (option === currentQuestion.correctAnswer) {\r\n            setScore((prevScore) => prevScore + 1);\r\n        }\r\n\r\n        // Move to the next question or end the quiz\r\n        if (currentQuestionIndex < quizzes[0].questions.length - 1) {\r\n            setCurrentQuestionIndex((prevIndex) => prevIndex + 1);\r\n        } else {\r\n            alert(`Quiz completed! Your score is ${score + 1}/${quizzes[0].questions.length}`);\r\n        }\r\n    };\r\n\r\n    if (isLoading) {\r\n        return <p>Loading quiz...</p>;\r\n    }\r\n\r\n    if (quizzes.length === 0) {\r\n        return <p>No quizzes available.</p>;\r\n    }\r\n\r\n    const currentQuestion = quizzes[0].questions[currentQuestionIndex];\r\n\r\n    return (\r\n        <div style={{ padding: '20px', textAlign: 'center' }}>\r\n            <h2>{quizzes[0].topic}</h2>\r\n            <div style={{ marginTop: '20px' }}>\r\n                <h3>Question {currentQuestionIndex + 1}</h3>\r\n                <p>{currentQuestion.question}</p>\r\n                <ul style={{ listStyleType: 'none', padding: 0 }}>\r\n                    {currentQuestion.options.map((option, index) => (\r\n                        <li key={index} style={{ margin: '10px 0' }}>\r\n                            <button\r\n                                style={{\r\n                                    padding: '10px 20px',\r\n                                    fontSize: '16px',\r\n                                    cursor: 'pointer',\r\n                                    backgroundColor: '#007bff',\r\n                                    color: 'white',\r\n                                    border: 'none',\r\n                                    borderRadius: '5px',\r\n                                }}\r\n                                onClick={() => handleOptionClick(option)} // Pass the clicked option\r\n                            >\r\n                                {option}\r\n                            </button>\r\n                        </li>\r\n                    ))}\r\n                </ul>\r\n                <p>Score: {score}/{quizzes[0].questions.length}</p>\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default QuizTakePage;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}